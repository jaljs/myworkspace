
#include "Ultrasonic.h"
#include "Config.h"
#include <math.h>

#define module_interval 25    //定义超声波模块接收发射端间距(单位：mm)
#define object_distance 100.0   //检测物体的距离

int overcount=0;               //用于检测是否定时器已经溢出


/*
 * 函数名：delay
 * 描述  ：延时大概10ums
 * 输入  ：无
 * 输出  ：无
 * 调用  ：外部调用
 */
void delay(void)
{
  u32 i;
  i=100000;
  while(i--);
}

/*
 * 函数名：Get_distance
 * 描述  ：获得超声波距离
 * 输入  ：无
 * 输出  ：distance(毫米级)
 * 调用  ：外部调用
 */
float Get_distance(void)
{
  float distance=0;sum_distance=0;
  u16 TIM=0;
  u8 i=0;
  /*测5次数据计算一次平均值*/
  while(i!=5)
  {
      GPIO_SetBits(GPIOC,GPIO_Pin_4);//拉高信号，作为触发信号
      delay();//高电平信号超过10us
      GPIO_ResetBits(GPIOC,GPIO_Pin_4);//拉低信号
      
      TIM_Cmd(TIM4, ENABLE);
      /*等待回响信号*/
      while(!GPIO_ReadInputDataBit(GPIOC,GPIO_Pin_5) && overcount==0);
      TIM4->CNT=0;
      while(GPIO_ReadInputDataBit(GPIOC,GPIO_Pin_5) && overcount==0);
      TIM_Cmd(TIM4, DISABLE);
      i++;
      if(overcount!=0)//定时器中断溢出
      {
            overcount=0;//清零
            return 0.0;
      }
      TIM=TIM_GetCounter(TIM4);//获取计TIM4数寄存器中的计数值
      distance=(float)sqrt((TIM/20.0*17)*(TIM/20.0*17)-module_interval*module_interval/4.0)+12.0; //12.0为误差补偿//根据计数值算出单次测距距离
      sum_distance=sum_distance+distance;//累加5次
  }
  distance=sum_distance/5;//求5次平均值
  return(distance);//返回距离值
}
